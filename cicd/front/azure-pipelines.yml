trigger:
 branches:
  include:
    - master
 paths:
   include:
     - front

variables:
  - name: 'default-vm-image'
    value: 'ubuntu-latest'
    readonly: true
  - name: npm_config_cache
    value: $(Pipeline.Workspace)/front/.npm
parameters:
  - name: pool
    type: string
    displayName: Pool
    default: default
    values:
      - default
      - azure-vm
      - myserver
  - name: docker-registry
    type: string
    displayName: Docker registry
    default: AuctionhouseDockerRegistry
    values:
      - AuctionhouseDockerRegistry
      - VPSDockerRegistry


stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: 'build'
    displayName: 'Build app and push docker image'
    ${{ if eq(parameters['pool'], 'default') }}:
      pool:
        vmImage: ${{ variables['default-vm-image'] }}
    ${{ else }}:
      pool: ${{ parameters['pool'] }}
    steps:
    - task: Bash@3
      displayName: 'Copy prod environment ts file'
      inputs:
        targetType: 'inline'
        script: |
          # Copy prod env
          cp front/secrets/environment.prod.ts front/src/environments && cat front/src/environments/environment.prod.ts
    - task: NodeTool@0
      inputs:
        versionSpec: '18.13.x'
    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | front/package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: $(npm_config_cache)
      displayName: Cache npm
    - task: Npm@1
      displayName: 'Install npm dependencies'
      inputs:
        command: 'ci'
        workingDir: 'front'
    - task: Npm@1
      displayName: 'Build app with production configuration'
      inputs:
        command: 'custom'
        workingDir: 'front'
        customCommand: 'run build -- -c=production'
    - task: Docker@2
      displayName: 'Build and push docker image'
      inputs:
        containerRegistry: ${{ parameters['docker-registry'] }}
        repository: 'pekalam/auctionhouse-front'
        command: 'buildAndPush'
        Dockerfile: 'front/Dockerfile.hosting'
        tags: 'latest'
- template: deploy-azure-vm.yml
